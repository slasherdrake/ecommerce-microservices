
services:
  product-db:
    image: postgres:16
    container_name: productdb
    environment:
      POSTGRES_DB: productdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d productdb"]
      interval: 10s
      timeout: 5s
      retries: 10

  order-db:
    image: postgres:16
    container_name: orderdb
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d orderdb"]
      interval: 10s
      timeout: 5s
      retries: 10

  config-server:
    build:
      context: ../config-server
      args:
        JAR_FILE: target/config-server-0.0.1-SNAPSHOT.jar
    container_name: config-server
    environment:
      SPRING_PROFILES_ACTIVE: native
    ports:
      - "8888:8888"


  product-service:
    build:
      context: ../product-service
      args:
        JAR_FILE: target/product-service-0.0.1-SNAPSHOT.jar
    container_name: product-service
    depends_on:
      product-db:
        condition: service_healthy
      config-server:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: dev
      # direct DB props (no config server)
      # SPRING_DATASOURCE_URL: jdbc:postgresql://productdb:5432/productdb
      # SPRING_DATASOURCE_USERNAME: postgres
      # SPRING_DATASOURCE_PASSWORD: password
      # SPRING_JPA_HIBERNATE_DDL_AUTO: update
      # SPRING_JPA_SHOW_SQL: "true"

      # optional: log level
      # LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: INFO
    ports:
      - "8081:8081"

  order-service:
    build:
      context: ../order-service
      args:
        JAR_FILE: target/order-service-0.0.1-SNAPSHOT.jar
    container_name: order-service
    depends_on:
      order-db:
        condition: service_healthy
      config-server:
        condition: service_started
      product-service:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: dev
      # SPRING_DATASOURCE_URL: jdbc:postgresql://orderdb:5432/orderdb
      # SPRING_DATASOURCE_USERNAME: postgres
      # SPRING_DATASOURCE_PASSWORD: password
      # SPRING_JPA_HIBERNATE_DDL_AUTO: update
      # SPRING_JPA_SHOW_SQL: "true"

      # Tell Order Service how to call Product Service directly
      # product.service.base-url: http://product-service:8081/api
    ports:
      - "8082:8082"


  